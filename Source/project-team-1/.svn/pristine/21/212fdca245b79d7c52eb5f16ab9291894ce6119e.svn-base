package manager;

import classes.util.PaginationHelper;
import entities.Products;
import java.io.Serializable;
import java.util.List;
import javax.ejb.EJB;
import javax.enterprise.context.SessionScoped;
import javax.faces.bean.ManagedBean;
import javax.faces.model.DataModel;
import javax.faces.model.ListDataModel;
import model.SearchFacade;

@ManagedBean
@SessionScoped
public class SearchManaged implements Serializable {

    @EJB
    private SearchFacade searchFacade;

    private String searchValue;
    private String searchType;
    private PaginationHelper pagination;
    private List<Products> items;

    public SearchManaged() {
    }

    public String getSearchValue() {
        return searchValue;
    }

    public void setSearchValue(String searchValue) {
        this.searchValue = searchValue;
    }

    public String getSearchType() {
        return searchType;
    }

    public void setSearchType(String searchType) {
        this.searchType = searchType;
    }

    public String search() {
        items = getPagination().getItems();
        return "Search";
    }

    public List<Products> getItems() {
        if (items == null) {
            items = getPagination().getItems();
        }
        return items;
    }

    public PaginationHelper getPagination() {
        if (pagination == null) {
            pagination = new PaginationHelper(20) {

                @Override
                public int getItemsCount() {
                    return searchFacade.count();
                }

                @Override
                public DataModel createPageDataModel() {
                    return new ListDataModel(searchFacade.searchProduct(searchType, searchValue, new int[]{getPageFirstItem(), getPageFirstItem() + getPageSize()}));
                }

                @Override
                public List<Products> getItems() {
                    return searchFacade.searchProduct(searchType, searchValue, new int[]{getPageFirstItem(), getPageFirstItem() + getPageSize()});
                }
            };
        }
        return pagination;
    }

    private void recreateModel() {
        items = null;
    }

    private void recreatePagination() {
        pagination = null;
    }

    public String next() {
        getPagination().nextPage();
        recreateModel();
        return "Search";
    }

    public String previous() {
        getPagination().previousPage();
        recreateModel();
        return "Search";
    }
}
